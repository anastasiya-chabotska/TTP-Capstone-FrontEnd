[{"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/index.js":"1","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/App/App.js":"2","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/redux/store.js":"3","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/redux/root-reducer.js":"4","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/routes/RoutesContainer.jsx":"5","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/redux/player/player.reducer.js":"6","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/redux/places/places.reducer.js":"7","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/routes/RoutesView.jsx":"8","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/redux/player/player.types.js":"9","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/redux/places/places.types.js":"10","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/index.js":"11","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/SinglePlaceContainer.jsx":"12","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/redux/places/places.actions.js":"13","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/AllPlacesByCategoryContainer.jsx":"14","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/AllPlacesContainer.jsx":"15","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/AllPlacesByBoroughContainer.jsx":"16","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/HomeContainer.jsx":"17","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/Map.jsx":"18","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/index.js":"19","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/AllPlacesView.jsx":"20","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/RandomPlacesView.jsx":"21","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/CommentsView.jsx":"22","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/LikesView.jsx":"23","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/HeaderContainer.jsx":"24"},{"size":415,"mtime":1611861225869,"results":"25","hashOfConfig":"26"},{"size":472,"mtime":1611863152207,"results":"27","hashOfConfig":"26"},{"size":764,"mtime":1611861225872,"results":"28","hashOfConfig":"26"},{"size":283,"mtime":1611861225871,"results":"29","hashOfConfig":"26"},{"size":203,"mtime":1611861225868,"results":"30","hashOfConfig":"26"},{"size":380,"mtime":1611861225871,"results":"31","hashOfConfig":"26"},{"size":499,"mtime":1611861225870,"results":"32","hashOfConfig":"26"},{"size":865,"mtime":1611861225868,"results":"33","hashOfConfig":"26"},{"size":108,"mtime":1611861225871,"results":"34","hashOfConfig":"26"},{"size":150,"mtime":1611861225870,"results":"35","hashOfConfig":"26"},{"size":549,"mtime":1611861225867,"results":"36","hashOfConfig":"26"},{"size":1387,"mtime":1611861225867,"results":"37","hashOfConfig":"26"},{"size":1644,"mtime":1611861225870,"results":"38","hashOfConfig":"26"},{"size":1492,"mtime":1611861225866,"results":"39","hashOfConfig":"26"},{"size":1152,"mtime":1611861225867,"results":"40","hashOfConfig":"26"},{"size":1440,"mtime":1611861225866,"results":"41","hashOfConfig":"26"},{"size":1132,"mtime":1611861225867,"results":"42","hashOfConfig":"26"},{"size":4163,"mtime":1611861225867,"results":"43","hashOfConfig":"26"},{"size":334,"mtime":1611859187268,"results":"44","hashOfConfig":"26"},{"size":1043,"mtime":1611861225868,"results":"45","hashOfConfig":"26"},{"size":991,"mtime":1611861225868,"results":"46","hashOfConfig":"26"},{"size":937,"mtime":1611855843291,"results":"47","hashOfConfig":"26"},{"size":350,"mtime":1611860412631,"results":"48","hashOfConfig":"26"},{"size":795,"mtime":1611837377405,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"z810wg",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/index.js",[],["107","108"],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/App/App.js",[],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/redux/store.js",[],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/redux/root-reducer.js",[],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/routes/RoutesContainer.jsx",[],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/redux/player/player.reducer.js",[],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/redux/places/places.reducer.js",[],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/routes/RoutesView.jsx",["109"],"import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport {\n  AllPlacesContainer,\n  AllPlacesByBoroughContainer,\n  AllPlacesByCategoryContainer,\n  HomeContainer,\n} from \"../containers/\";\nimport SinglePlaceContainer from \"../containers/SinglePlaceContainer\";\n\nconst RoutesView = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={HomeContainer} />\n        <Route exact path=\"/all\" component={AllPlacesContainer} />\n        <Route\n          exact\n          path=\"/boroughs/:id\"\n          component={AllPlacesByBoroughContainer}\n        />\n        <Route\n          exact\n          path=\"/categories/:id\"\n          component={AllPlacesByCategoryContainer}\n        />\n        <Route exact path=\"/all/:id\" component={SinglePlaceContainer} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default RoutesView;\n","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/redux/player/player.types.js",[],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/redux/places/places.types.js",[],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/index.js",["110"],"import AllPlacesByCategoryContainer from \"./AllPlacesByCategoryContainer\";\n\n// Barrel file for container components, which will be used to compose our App component, which will be the root component we will pass to the ReactDOM render call;\nexport { default as AllPlacesContainer } from \"./AllPlacesContainer\";\nexport { default as AllPlacesByBoroughContainer } from \"./AllPlacesByBoroughContainer\";\nexport { default as AllPlacesByCategoryContainer } from \"./AllPlacesByCategoryContainer\";\nexport { default as HomeContainer } from \"./HomeContainer\";\n","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/SinglePlaceContainer.jsx",["111","112"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\n\nimport Map from \"./Map\";\n\nimport { fetchSinglePlaceThunk } from \"../../../redux/places/places.actions\";\n\n// Smart container;\nclass SinglePlaceContainer extends Component {\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.fetchSinglePlace(id);\n  }\n\n  render() {\n    return (\n      <div>\n        <Link to=\"/\">\n          <button>Home</button>\n        </Link>\n        <h3>{this.props.singlePlace.name}</h3>\n        <img src={this.props.singlePlace.imageUrl} />\n        <p>{this.props.singlePlace.description}</p>\n        <p>{this.props.singlePlace.address}</p>\n      </div>\n    );\n  }\n}\n\n// Map state to props;\nconst mapStateToProps = (state) => {\n  console.log(\"state\", state);\n  return {\n    singlePlace: state.places.singlePlace,\n  };\n};\n\n// Map dispatch to props;\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchSinglePlace: (id) => dispatch(fetchSinglePlaceThunk(id)),\n  };\n};\n\n// Type check props;\n// AllPlayersContainer.propTypes = {\n//   allPlayers: PropTypes.array.isRequired,\n//   fetchAllPlayers: PropTypes.func.isRequired,\n// };\n\n// Export our store-connected container by default;\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SinglePlaceContainer);\n","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/redux/places/places.actions.js",[],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/AllPlacesByCategoryContainer.jsx",[],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/AllPlacesContainer.jsx",["113","114"],"import React, { Component } from \"react\";\n// import PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\n\nimport Map from './Map';\n\nimport { fetchAllPlacesThunk } from \"../../../redux/places/places.actions\";\nimport { AllPlacesView } from \"../views\";\nimport {RandomPlacesView} from \"../views\";\n\n// Smart container;\nclass AllPlacesContainer extends Component {\n  componentDidMount() {\n    this.props.fetchAllPlaces();\n  }\n\n\n\n  render() {\n    return(\n      <div>\n      <Map\n        allPlaces={this.props.allPlaces}\n      />\n      </div>\n    )\n  }\n}\n\n// Map state to props;\nconst mapStateToProps = (state) => {\n  console.log(\"state\", state);\n  return {\n    allPlaces: state.places.allPlaces,\n  };\n};\n\n// Map dispatch to props;\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchAllPlaces: () => dispatch(fetchAllPlacesThunk()),\n  };\n};\n\n// Type check props;\n// AllPlayersContainer.propTypes = {\n//   allPlayers: PropTypes.array.isRequired,\n//   fetchAllPlayers: PropTypes.func.isRequired,\n// };\n\n// Export our store-connected container by default;\nexport default connect(mapStateToProps, mapDispatchToProps)(AllPlacesContainer);\n","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/AllPlacesByBoroughContainer.jsx",[],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/HomeContainer.jsx",["115","116"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport RoutesContainer from \"../routes/RoutesContainer\";\n\nclass HomeContainer extends Component {\n  render() {\n    return (\n      <div>\n        <Link to=\"/all\">\n          <button>All Places in NYC</button>\n        </Link>\n        <br />\n        <Link to=\"/categories/art\">\n          <button>Art</button>\n        </Link>\n        <Link to=\"/categories/food\">\n          <button>Food</button>\n        </Link>\n        <Link to=\"/categories/parks\">\n          <button>Parks</button>\n        </Link>\n        <br />\n        <Link to=\"/boroughs/brooklyn\">\n          <button>Brooklyn</button>\n        </Link>\n        <Link to=\"/boroughs/manhattan\">\n          <button>Manhattan</button>\n        </Link>\n        <Link to=\"/boroughs/queens\">\n          <button>Queens</button>\n        </Link>\n        <Link to=\"/boroughs/bronx\">\n          <button>The Bronx</button>\n        </Link>\n        <Link to=\"/boroughs/statenisland\">\n          <button>Staten Island</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default HomeContainer;\n","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/Map.jsx",["117","118","119"],"import React, {Component} from 'react';\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\n\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport { Route, Switch, Link } from 'react-router-dom';\n\nimport HomeContainer from './HomeContainer';\nimport { RandomPlacesView } from '../views';\n\n\n\n\nexport class MapContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { address: '' ,\n            showingInfoWindow: false,\n            activeMarker: {},\n            selectedPlace: {},\n            newAddress : '',\n            mapCenter : {\n                lat:\t40.650002,\n                lng: \t-73.949997\n            }\n        };\n      }\n    \n      componentDidMount(){\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(this.defaultLocation)\n      }\n    }\n    \n    defaultLocation = (position)=>{\n      let pos = {\n        lat : position.coords.latitude,\n        lng : position.coords.longitude\n      }\n      this.setState({\n        mapCenter : pos\n      })\n    } \n\n    handleChange = address => {\n        this.setState({ address });\n      };\n     \n      handleSelect = address => {\n        geocodeByAddress(address)\n          .then(results => getLatLng(results[0]))\n          .then(latLng => {\n              console.log('Success', latLng)\n              this.setState({ address })\n              this.setState({mapCenter: latLng})})\n          .catch(error => console.error('Error', error));\n      };\n      \n      handleClick = address => {\n        this.setState({ newAddress : address });\n      };\n     \n    \n    render() {\n        \n      return (\n          <div id = \"google-map\">\n          <div id= 'Homebtn'>\n          <Link to=\"/\">\n          <button>Home</button>\n          </Link>\n          </div>\n          <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n      <div id = \"map\">\n        <Map google={this.props.google}\n            initialCenter ={{\n                lat : this.state.mapCenter.lat,\n                lng: this.state.mapCenter.lng\n            }}\n            center = {{\n                lat : this.state.mapCenter.lat,\n                lng: this.state.mapCenter.lng\n            }}\n\n            style = {styles}\n        >\n          <Marker\n              position = {{\n                lat : this.state.mapCenter.lat,\n                lng: this.state.mapCenter.lng\n              }}\n          />\n        </Map>\n        </div>\n        <div>\n        <RandomPlacesView\n          allPlaces={this.props.allPlaces}\n          // clicked = {this.handleChange}\n        />\n        </div>\n        </div>\n      )\n    }\n  }\n\n  const styles = {\n    width : '50%',\n    height : '500px'\n  }\n\n  \n \n\n  export default GoogleApiWrapper({\n    apiKey: ('AIzaSyANh8chPbOFMS_0ecTl-VENfAvgD5N2sJM')\n  })(MapContainer)","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/index.js",[],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/AllPlacesView.jsx",["120"],"import React from \"react\";\nimport \"./styles/AllPlayersView.css\";\nimport { Link } from \"react-router-dom\";\n// import PropTypes from 'prop-types';\n\nconst AllPlacesView = (props) => {\n  console.log(props.params);\n  return (\n    //open to styling//\n    <div className=\"all-places\">\n      <Link to=\"/\">\n        <button>Home</button>\n      </Link>\n      <h1>{props.id.toUpperCase()}</h1>\n      {props.allPlaces.map((place) => (\n        <div key={place.id}>\n          <img src={place.imageUrl} alt=\"place image\" width=\"50px\" />\n          <h2>{place.name}</h2>\n          <p>{place.description}</p>\n          <p>{place.address}</p>\n          <p>{place.borough}</p>\n          <p>{place.category}</p>\n          <p>{place.numOfLikes}</p>\n          <Link to={`/all/${place.id}`}>View More Info</Link>\n        </div>\n      ))}\n      {props.allPlaces.length === 0 ? <p>No Places Found</p> : \"\"}\n    </div>\n    //--------------------//\n  );\n};\n\n// AllPlayersView.propTypes = {\n//   allPlayers: PropTypes.array.isRequired,\n// };\n\nexport default AllPlacesView;\n","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/RandomPlacesView.jsx",["121","122","123"],"import React from \"react\";\nimport \"./styles/AllPlayersView.css\";\nimport { Link } from \"react-router-dom\";\n// import PropTypes from 'prop-types';\n\nimport Map from '../containers/Map';\n\n\nconst RandomPlacesView = (props) => {\n  console.log(props.params);\n  return (\n    //open to styling//\n      <div className=\"all-random-places\">\n      {props.allPlaces.map((place) => (\n        <div>\n          <img src={place.imageUrl} alt=\"place image\" width=\"50px\" />\n          <h2>{place.name}</h2>\n          <p>{place.description}</p>\n          <p>{place.address}</p>\n          <p>{place.borough}</p>\n          <p>{place.category}</p>\n          <p>{place.numOfLikes}</p>\n          {/* <button type = 'button' onClick = {props.clicked(place.address)}>Show on Map</button> */}\n        </div>\n      ))}\n      {props.allPlaces.length === 0 ? <p>No Places Found</p> : \"\"}\n    </div>\n  );\n};\n\n// AllPlayersView.propTypes = {\n//   allPlayers: PropTypes.array.isRequired,\n// };\n\nexport default RandomPlacesView;\n","/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/CommentsView.jsx",[],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/LikesView.jsx",[],"/Users/emi/Desktop/TTP/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/HeaderContainer.jsx",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":2,"column":25,"nodeType":"130","messageId":"131","endLine":2,"endColumn":29},{"ruleId":"128","severity":1,"message":"132","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"133","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":11},{"ruleId":"134","severity":1,"message":"135","line":24,"column":9,"nodeType":"136","endLine":24,"endColumn":54},{"ruleId":"128","severity":1,"message":"137","line":8,"column":10,"nodeType":"130","messageId":"131","endLine":8,"endColumn":23},{"ruleId":"128","severity":1,"message":"138","line":9,"column":9,"nodeType":"130","messageId":"131","endLine":9,"endColumn":25},{"ruleId":"128","severity":1,"message":"139","line":2,"column":27,"nodeType":"130","messageId":"131","endLine":2,"endColumn":33},{"ruleId":"128","severity":1,"message":"140","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":23},{"ruleId":"128","severity":1,"message":"141","line":8,"column":10,"nodeType":"130","messageId":"131","endLine":8,"endColumn":15},{"ruleId":"128","severity":1,"message":"142","line":8,"column":17,"nodeType":"130","messageId":"131","endLine":8,"endColumn":23},{"ruleId":"128","severity":1,"message":"143","line":10,"column":8,"nodeType":"130","messageId":"131","endLine":10,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":17,"column":11,"nodeType":"136","endLine":17,"endColumn":70},{"ruleId":"128","severity":1,"message":"129","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"133","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":11},{"ruleId":"144","severity":1,"message":"145","line":16,"column":11,"nodeType":"136","endLine":16,"endColumn":70},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'AllPlacesByCategoryContainer' is defined but never used.","'Map' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AllPlacesView' is defined but never used.","'RandomPlacesView' is defined but never used.","'Router' is defined but never used.","'RoutesContainer' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'HomeContainer' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]