[{"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/index.js":"1","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/App/App.js":"2","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/redux/store.js":"3","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/redux/root-reducer.js":"4","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/routes/RoutesContainer.jsx":"5","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/HeaderContainer.jsx":"6","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/redux/player/player.reducer.js":"7","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/redux/places/places.reducer.js":"8","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/routes/RoutesView.jsx":"9","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/redux/player/player.types.js":"10","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/redux/places/places.types.js":"11","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/index.js":"12","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/SinglePlaceContainer.jsx":"13","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/Form/Form.jsx":"14","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/redux/places/places.actions.js":"15","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/HomeContainer.jsx":"16","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/AllPlacesContainer.jsx":"17","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/AllPlacesByBoroughContainer.jsx":"18","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/AllPlacesByCategoryContainer.jsx":"19","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/Form/Confirm.jsx":"20","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/Form/FormFillOut.jsx":"21","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/Form/Status.jsx":"22","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/Map.jsx":"23","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/index.js":"24","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/MarkerCreator.jsx":"25","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/AllPlacesView.jsx":"26","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/RandomPlacesView.jsx":"27","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/LikesView.jsx":"28","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/CommentsView.jsx":"29"},{"size":415,"mtime":1611761264295,"results":"30","hashOfConfig":"31"},{"size":472,"mtime":1611947534616,"results":"32","hashOfConfig":"31"},{"size":764,"mtime":1611688958261,"results":"33","hashOfConfig":"31"},{"size":283,"mtime":1611761264305,"results":"34","hashOfConfig":"31"},{"size":203,"mtime":1611761264288,"results":"35","hashOfConfig":"31"},{"size":795,"mtime":1611947534618,"results":"36","hashOfConfig":"31"},{"size":380,"mtime":1611688958260,"results":"37","hashOfConfig":"31"},{"size":597,"mtime":1611884419827,"results":"38","hashOfConfig":"31"},{"size":966,"mtime":1611884419785,"results":"39","hashOfConfig":"31"},{"size":108,"mtime":1611688958260,"results":"40","hashOfConfig":"31"},{"size":184,"mtime":1611884419829,"results":"41","hashOfConfig":"31"},{"size":549,"mtime":1611761264288,"results":"42","hashOfConfig":"31"},{"size":1387,"mtime":1611884413221,"results":"43","hashOfConfig":"31"},{"size":1752,"mtime":1611956847036,"results":"44","hashOfConfig":"31"},{"size":2093,"mtime":1611884419795,"results":"45","hashOfConfig":"31"},{"size":1147,"mtime":1611884419777,"results":"46","hashOfConfig":"31"},{"size":1152,"mtime":1611890018019,"results":"47","hashOfConfig":"31"},{"size":1440,"mtime":1611943518014,"results":"48","hashOfConfig":"31"},{"size":1492,"mtime":1611761264282,"results":"49","hashOfConfig":"31"},{"size":2949,"mtime":1611884419791,"results":"50","hashOfConfig":"31"},{"size":3670,"mtime":1611957401996,"results":"51","hashOfConfig":"31"},{"size":1117,"mtime":1611884419794,"results":"52","hashOfConfig":"31"},{"size":5387,"mtime":1611947534621,"results":"53","hashOfConfig":"31"},{"size":334,"mtime":1611947534627,"results":"54","hashOfConfig":"31"},{"size":745,"mtime":1611947534621,"results":"55","hashOfConfig":"31"},{"size":1132,"mtime":1611956972753,"results":"56","hashOfConfig":"31"},{"size":991,"mtime":1611890018023,"results":"57","hashOfConfig":"31"},{"size":350,"mtime":1611947534624,"results":"58","hashOfConfig":"31"},{"size":937,"mtime":1611947534623,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1wvxr8i",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/index.js",[],["130","131"],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/App/App.js",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/redux/store.js",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/redux/root-reducer.js",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/routes/RoutesContainer.jsx",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/HeaderContainer.jsx",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/redux/player/player.reducer.js",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/redux/places/places.reducer.js",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/routes/RoutesView.jsx",["132"],"import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nimport Form from \"../../Form/Form\";\n\nimport {\n  AllPlacesContainer,\n  AllPlacesByBoroughContainer,\n  AllPlacesByCategoryContainer,\n  HomeContainer,\n} from \"../containers/\";\n\nimport SinglePlaceContainer from \"../containers/SinglePlaceContainer\";\n\nconst RoutesView = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={HomeContainer} />\n        <Route exact path=\"/all\" component={AllPlacesContainer} />\n        <Route\n          exact\n          path=\"/boroughs/:id\"\n          component={AllPlacesByBoroughContainer}\n        />\n        <Route\n          exact\n          path=\"/categories/:id\"\n          component={AllPlacesByCategoryContainer}\n        />\n        <Route exact path=\"/all/:id\" component={SinglePlaceContainer} />\n        <Route excat path=\"/addnew\" component={Form}></Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default RoutesView;\n","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/redux/player/player.types.js",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/redux/places/places.types.js",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/index.js",["133"],"import AllPlacesByCategoryContainer from \"./AllPlacesByCategoryContainer\";\n\n// Barrel file for container components, which will be used to compose our App component, which will be the root component we will pass to the ReactDOM render call;\nexport { default as AllPlacesContainer } from \"./AllPlacesContainer\";\nexport { default as AllPlacesByBoroughContainer } from \"./AllPlacesByBoroughContainer\";\nexport { default as AllPlacesByCategoryContainer } from \"./AllPlacesByCategoryContainer\";\nexport { default as HomeContainer } from \"./HomeContainer\";\n","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/SinglePlaceContainer.jsx",["134","135"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\n\nimport Map from \"./Map\";\n\nimport { fetchSinglePlaceThunk } from \"../../../redux/places/places.actions\";\n\n// Smart container;\nclass SinglePlaceContainer extends Component {\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.props.fetchSinglePlace(id);\n  }\n\n  render() {\n    return (\n      <div>\n        <Link to=\"/\">\n          <button>Home</button>\n        </Link>\n        <h3>{this.props.singlePlace.name}</h3>\n        <img src={this.props.singlePlace.imageUrl} />\n        <p>{this.props.singlePlace.description}</p>\n        <p>{this.props.singlePlace.address}</p>\n      </div>\n    );\n  }\n}\n\n// Map state to props;\nconst mapStateToProps = (state) => {\n  console.log(\"state\", state);\n  return {\n    singlePlace: state.places.singlePlace,\n  };\n};\n\n// Map dispatch to props;\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchSinglePlace: (id) => dispatch(fetchSinglePlaceThunk(id)),\n  };\n};\n\n// Type check props;\n// AllPlayersContainer.propTypes = {\n//   allPlayers: PropTypes.array.isRequired,\n//   fetchAllPlayers: PropTypes.func.isRequired,\n// };\n\n// Export our store-connected container by default;\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SinglePlaceContainer);\n","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/Form/Form.jsx",["136"],"import React, { Component } from \"react\";\nimport FormFillOut from \"./FormFillOut\";\nimport Confirm from \"./Confirm\";\nimport Status from \"./Status\";\n\nclass Form extends Component {\n  state = {\n    step: 1,\n    name: null,\n    description: null,\n    address: null,\n    imageUrl: null,\n    borough: null,\n    category: null,\n    numOfLikes: 0,\n    placeAdded: false,\n    comments: [],\n  };\n\n  submitted = (obj) => {\n    //check for a field to see if obj is not empty\n    if (obj.name) this.setState({ placeAdded: true });\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  nextStep = () => {\n    this.setState({\n      step: this.state.step + 1,\n    });\n  };\n\n  prevStep = () => {\n    this.setState({\n      step: this.state.step - 1,\n    });\n  };\n\n  render() {\n    const {\n      name,\n      description,\n      address,\n      imageUrl,\n      borough,\n      category,\n      numOfLikes,\n      comments,\n    } = this.state;\n    const values = {\n      name,\n      description,\n      address,\n      imageUrl,\n      borough,\n      category,\n      numOfLikes,\n      comments,\n    };\n    switch (this.state.step) {\n      case 1:\n        return (\n          <FormFillOut\n            obj={values}\n            onChange={this.onChange}\n            nextStep={this.nextStep}\n          ></FormFillOut>\n        );\n      case 2:\n        return (\n          <Confirm\n            obj={values}\n            prevStep={this.prevStep}\n            nextStep={this.nextStep}\n            submitted={this.submitted}\n          ></Confirm>\n        );\n      case 3:\n        return (\n          <Status\n            placeAdded={this.state.placeAdded}\n            prevStep={this.prevStep}\n          ></Status>\n        );\n    }\n  }\n}\n\nexport default Form;\n","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/redux/places/places.actions.js",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/HomeContainer.jsx",["137","138"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport RoutesContainer from \"../routes/RoutesContainer\";\n\nclass HomeContainer extends Component {\n  render() {\n    return (\n      <div>\n        <Link to=\"/all\">\n          <button>All Places in NYC</button>\n        </Link>\n        <br />\n        <Link to=\"/categories/art\">\n          <button>Art</button>\n        </Link>\n        <Link to=\"/categories/food\">\n          <button>Food</button>\n        </Link>\n        <Link to=\"/categories/parks\">\n          <button>Parks</button>\n        </Link>\n        <br />\n        <Link to=\"/boroughs/brooklyn\">\n          <button>Brooklyn</button>\n        </Link>\n        <Link to=\"/boroughs/manhattan\">\n          <button>Manhattan</button>\n        </Link>\n        <Link to=\"/boroughs/queens\">\n          <button>Queens</button>\n        </Link>\n        <Link to=\"/boroughs/bronx\">\n          <button>The Bronx</button>\n        </Link>\n        <Link to=\"/boroughs/statenisland\">\n          <button>Staten Island</button>\n        </Link>\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default HomeContainer;\n","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/AllPlacesContainer.jsx",["139","140"],"import React, { Component } from \"react\";\n// import PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\n\nimport Map from './Map';\n\nimport { fetchAllPlacesThunk } from \"../../../redux/places/places.actions\";\nimport { AllPlacesView } from \"../views\";\nimport {RandomPlacesView} from \"../views\";\n\n// Smart container;\nclass AllPlacesContainer extends Component {\n  componentDidMount() {\n    this.props.fetchAllPlaces();\n  }\n\n\n\n  render() {\n    return(\n      <div>\n      <Map\n        allPlaces={this.props.allPlaces}\n      />\n      </div>\n    )\n  }\n}\n\n// Map state to props;\nconst mapStateToProps = (state) => {\n  console.log(\"state\", state);\n  return {\n    allPlaces: state.places.allPlaces,\n  };\n};\n\n// Map dispatch to props;\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchAllPlaces: () => dispatch(fetchAllPlacesThunk()),\n  };\n};\n\n// Type check props;\n// AllPlayersContainer.propTypes = {\n//   allPlayers: PropTypes.array.isRequired,\n//   fetchAllPlayers: PropTypes.func.isRequired,\n// };\n\n// Export our store-connected container by default;\nexport default connect(mapStateToProps, mapDispatchToProps)(AllPlacesContainer);\n","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/AllPlacesByBoroughContainer.jsx",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/AllPlacesByCategoryContainer.jsx",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/Form/Confirm.jsx",["141"],"import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport ImageOutlinedIcon from \"@material-ui/icons/ImageOutlined\";\nimport axios from \"axios\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport { connect } from \"react-redux\";\nimport { addNewPlaceThunk } from \"../../redux/places/places.actions\";\n\nclass Confirm extends Component {\n  async onSubmit(e) {\n    e.preventDefault();\n\n    await this.props.addNewPlace(this.props.obj);\n    this.props.submitted(this.props.singlePlace);\n    this.props.nextStep();\n  }\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <Dialog open fullWidth>\n          <Box p={5}>\n            <Typography variant=\"h4\">Confirm Information Below</Typography>\n            <List>\n              <ListItemAvatar>\n                <Avatar\n                  src={this.props.obj.imageUrl}\n                  alt=\"place image\"\n                  size=\"large\"\n                >\n                  <ImageOutlinedIcon></ImageOutlinedIcon>\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Name\" secondary={this.props.obj.name} />\n              <ListItemText\n                primary=\"Address\"\n                secondary={this.props.obj.address}\n              />\n              <ListItemText\n                primary=\"Description\"\n                secondary={this.props.obj.description}\n              />\n              <ListItemText\n                primary=\"Borough\"\n                secondary={this.props.obj.borough}\n              />\n              <ListItemText\n                primary=\"Category\"\n                secondary={this.props.obj.category}\n              />\n            </List>\n            <Button\n              variant=\"contained\"\n              margin=\"normal\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={this.props.prevStep}\n            >\n              Go Back\n            </Button>\n            <Button\n              variant=\"contained\"\n              margin=\"normal\"\n              color=\"secondary\"\n              size=\"large\"\n              onClick={(e) => this.onSubmit(e)}\n            >\n              Submit\n            </Button>\n          </Box>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(\"state\", state);\n  return {\n    allPlaces: state.places.allPlaces,\n    singlePlace: state.places.singlePlace,\n  };\n};\n\n// Map dispatch to props;\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addNewPlace: (obj) => dispatch(addNewPlaceThunk(obj)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Confirm);\n","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/Form/FormFillOut.jsx",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/Form/Status.jsx",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/Map.jsx",["142","143","144","145","146","147","148","149"],"import React, {Component} from 'react';\nimport {Map, Marker, GoogleApiWrapper, InfoWindow} from 'google-maps-react';\n\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport { Route, Switch, Link } from 'react-router-dom';\n\nimport HomeContainer from './HomeContainer';\nimport { RandomPlacesView } from '../views';\nimport MarkerCreator from './MarkerCreator';\n\nrequire('dotenv').config();\n\n\nexport class MapContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { address: '' ,\n            showingInfoWindow: false,\n            activeMarker: {},\n            selectedPlace: {},\n            newAddress : '',\n            mapCenter : {},\n            home: {},\n            place : []\n        };\n      }\n    \n      componentDidMount(){\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(this.defaultLocation)\n      }\n      {this.props.allPlaces.map(each =>{\n        {this.handlePlaceMarkers(each.address)}\n      })}\n      \n    }\n\n    \n    defaultLocation = (position)=>{\n      let pos = {\n        lat : position.coords.latitude,\n        lng : position.coords.longitude\n      }\n      this.setState({\n        home : pos,\n        mapCenter : pos\n      })\n    } \n\n    handleChange = address => {\n        this.setState({ address });\n      };\n     \n      handleSelect = address => {\n        geocodeByAddress(address)\n          .then(results => getLatLng(results[0]))\n          .then(latLng => {\n              console.log('Success', latLng)\n              this.setState({ address })\n              this.setState({mapCenter: latLng})})\n          .catch(error => console.error('Error', error));\n      };\n\n      handleInfo = position =>{\n        let pos = position\n        return(\n        <InfoWindow\n        position = {pos}>\n        </InfoWindow>\n        )\n      }\n\n      handlePlaceMarkers = add =>{\n        geocodeByAddress(add)\n          .then(results => getLatLng(results[0]))\n          .then(latLng =>{\n            let position = {\n              lat: latLng.lat,\n              lng: latLng.lng\n            }  \n            let placeholder = this.state.place\n            placeholder.push(position)\n            this.setState({\n              place : placeholder\n            })\n            console.log(this.state.place)\n          })\n          .catch(error => console.error('Error', error));\n      }\n      \n    \n    render() {\n        \n      return (\n          <div id = \"google-map\">\n          \n          <div id= 'Homebtn'>\n          <Link to=\"/\">\n          <button>Home</button>\n          </Link>\n          </div>\n          <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n      <div id = \"map\">\n        <Map google={this.props.google}\n            initialCenter ={{\n                lat : this.state.home.lat,\n                lng: this.state.home.lng\n            }}\n            center = {{\n                lat : this.state.mapCenter.lat,\n                lng: this.state.mapCenter.lng\n            }}\n\n            style = {styles}\n        >\n          <Marker id = 'destination'\n              title = \"\"\n              position = {{\n                lat : this.state.mapCenter.lat,\n                lng: this.state.mapCenter.lng\n              }}\n              onClick = {this.handleInfo(this.state.mapCenter)}\n          />\n          <Marker id = 'home'\n    \n          title = \"You're here\"\n              position = {{\n                lat : this.state.home.lat,\n                lng: this.state.home.lng\n              }}\n          />\n\n          {this.state.place.map(each =>{\n            return(\n              <Marker\n                position = {{\n                  lat: each.lat,\n                  lng: each.lng\n                }}\n              />\n            )\n          })}\n              \n          \n        </Map>\n        </div>\n       \n        </div>\n      )\n    }\n  }\n\n  const styles = {\n    width : '100%',\n    height : '500px'\n  }\n\n \n\n  export default GoogleApiWrapper({\n    apiKey : (`${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`)\n  })(MapContainer)","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/index.js",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/containers/MarkerCreator.jsx",["150","151","152","153","154"],"import React, {Component} from 'react';\nimport PlacesAutocomplete, {\n    geocodeByAddress,\n    getLatLng,\n  } from 'react-places-autocomplete';\nclass MarkerCreator extends Component{\n    constructor(props){\n        super(props)\n        \n    }\n\n    handleClick(add){\n        geocodeByAddress(add)\n        .then(results => getLatLng(results[0]))\n        .then(latLng =>{\n          let position = {\n            lat: latLng.lat,\n            lng: latLng.lng\n          }  \n          console.log(position)\n          return(\n              position\n          )\n        })\n        .catch(error => console.error('Error', error));\n    }\n\n    render(){\n        return\n      {this.handleClick(this.props.center)}        \n    }\n}\n\nexport default MarkerCreator;","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/AllPlacesView.jsx",["155"],"import React from \"react\";\nimport \"./styles/AllPlayersView.css\";\nimport { Link } from \"react-router-dom\";\n// import PropTypes from 'prop-types';\n\nconst AllPlacesView = (props) => {\n  console.log(props.params);\n  return (\n    //open to styling//\n    <div className=\"all-places\">\n      <Link to=\"/\">\n        <button>Home</button>\n      </Link>\n      <h1>{props.id.toUpperCase()}</h1>\n      {props.allPlaces.map((place) => (\n        <div key={place.id}>\n          <img src={place.imageUrl} alt=\"place image\" width=\"50px\" />\n          <h2>{place.name}</h2>\n          <p>{place.description}</p>\n          <p>{place.address}</p>\n          <p>{place.borough}</p>\n          <p>{place.category}</p>\n          <p>{place.numOfLikes}</p>\n          {place.comments.map((comment) => (\n            <p>{comment}</p>\n          ))}\n\n          <Link to={`/all/${place.id}`}>View More Info</Link>\n        </div>\n      ))}\n      {props.allPlaces.length === 0 ? <p>No Places Found</p> : \"\"}\n    </div>\n    //--------------------//\n  );\n};\n\n// AllPlayersView.propTypes = {\n//   allPlayers: PropTypes.array.isRequired,\n// };\n\nexport default AllPlacesView;\n","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/RandomPlacesView.jsx",["156","157","158"],"import React from \"react\";\nimport \"./styles/AllPlayersView.css\";\nimport { Link } from \"react-router-dom\";\n// import PropTypes from 'prop-types';\n\nimport Map from '../containers/Map';\n\n\nconst RandomPlacesView = (props) => {\n  console.log(props.params);\n  return (\n    //open to styling//\n      <div className=\"all-random-places\">\n      {props.allPlaces.map((place) => (\n        <div>\n          <img src={place.imageUrl} alt=\"place image\" width=\"50px\" />\n          <h2>{place.name}</h2>\n          <p>{place.description}</p>\n          <p>{place.address}</p>\n          <p>{place.borough}</p>\n          <p>{place.category}</p>\n          <p>{place.numOfLikes}</p>\n          {/* <button type = 'button' onClick = {props.clicked(place.address)}>Show on Map</button> */}\n        </div>\n      ))}\n      {props.allPlaces.length === 0 ? <p>No Places Found</p> : \"\"}\n    </div>\n  );\n};\n\n// AllPlayersView.propTypes = {\n//   allPlayers: PropTypes.array.isRequired,\n// };\n\nexport default RandomPlacesView;\n","/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/LikesView.jsx",[],"/Users/anastasiyachabotska/Desktop/TTP-Capstone-FrontEnd/src/components/AllPlaces/views/CommentsView.jsx",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":2,"column":25,"nodeType":"165","messageId":"166","endLine":2,"endColumn":29},{"ruleId":"163","severity":1,"message":"167","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"168","line":6,"column":8,"nodeType":"165","messageId":"166","endLine":6,"endColumn":11},{"ruleId":"169","severity":1,"message":"170","line":24,"column":9,"nodeType":"171","endLine":24,"endColumn":54},{"ruleId":"172","severity":1,"message":"173","line":62,"column":5,"nodeType":"174","messageId":"175","endLine":87,"endColumn":6},{"ruleId":"163","severity":1,"message":"176","line":2,"column":27,"nodeType":"165","messageId":"166","endLine":2,"endColumn":33},{"ruleId":"163","severity":1,"message":"177","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":23},{"ruleId":"163","severity":1,"message":"178","line":8,"column":10,"nodeType":"165","messageId":"166","endLine":8,"endColumn":23},{"ruleId":"163","severity":1,"message":"179","line":9,"column":9,"nodeType":"165","messageId":"166","endLine":9,"endColumn":25},{"ruleId":"163","severity":1,"message":"180","line":10,"column":8,"nodeType":"165","messageId":"166","endLine":10,"endColumn":13},{"ruleId":"163","severity":1,"message":"181","line":8,"column":10,"nodeType":"165","messageId":"166","endLine":8,"endColumn":15},{"ruleId":"163","severity":1,"message":"182","line":8,"column":17,"nodeType":"165","messageId":"166","endLine":8,"endColumn":23},{"ruleId":"163","severity":1,"message":"183","line":10,"column":8,"nodeType":"165","messageId":"166","endLine":10,"endColumn":21},{"ruleId":"163","severity":1,"message":"179","line":11,"column":10,"nodeType":"165","messageId":"166","endLine":11,"endColumn":26},{"ruleId":"163","severity":1,"message":"184","line":12,"column":8,"nodeType":"165","messageId":"166","endLine":12,"endColumn":21},{"ruleId":"185","severity":1,"message":"186","line":35,"column":7,"nodeType":"187","messageId":"188","endLine":37,"endColumn":10},{"ruleId":"189","severity":1,"message":"190","line":35,"column":38,"nodeType":"191","messageId":"192","endLine":35,"endColumn":40},{"ruleId":"185","severity":1,"message":"186","line":36,"column":9,"nodeType":"187","messageId":"188","endLine":36,"endColumn":48},{"ruleId":"163","severity":1,"message":"193","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},{"ruleId":"163","severity":1,"message":"194","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":26},{"ruleId":"195","severity":1,"message":"196","line":7,"column":5,"nodeType":"197","messageId":"198","endLine":10,"endColumn":6},{"ruleId":"185","severity":1,"message":"186","line":30,"column":7,"nodeType":"187","messageId":"188","endLine":30,"endColumn":44},{"ruleId":"199","severity":1,"message":"200","line":30,"column":7,"nodeType":"187","messageId":"201","endLine":30,"endColumn":44},{"ruleId":"202","severity":1,"message":"203","line":17,"column":11,"nodeType":"171","endLine":17,"endColumn":70},{"ruleId":"163","severity":1,"message":"164","line":3,"column":10,"nodeType":"165","messageId":"166","endLine":3,"endColumn":14},{"ruleId":"163","severity":1,"message":"168","line":6,"column":8,"nodeType":"165","messageId":"166","endLine":6,"endColumn":11},{"ruleId":"202","severity":1,"message":"203","line":16,"column":11,"nodeType":"171","endLine":16,"endColumn":70},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'AllPlacesByCategoryContainer' is defined but never used.","'Map' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Router' is defined but never used.","'RoutesContainer' is defined but never used.","'AllPlacesView' is defined but never used.","'RandomPlacesView' is defined but never used.","'axios' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'HomeContainer' is defined but never used.","'MarkerCreator' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'React' is defined but never used.","'PlacesAutocomplete' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unreachable","Unreachable code.","unreachableCode","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]